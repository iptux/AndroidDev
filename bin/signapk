#!/bin/bash
#
# signapk
# signing a apk with keystore
# see https://developer.android.com/tools/publishing/app-signing.html
#
# Create: 2016-04-24 17:10
# Author: Alex.wang
# Require: keytool, jarsigner, zipalign


readonly KEYSTOREDIR=~/.android/keystore
readonly DEFAULTKEYSTORE=release

# Timestamping Authority
# https://timestamp.geotrust.com/tsa
# http://timestamp.verisign.com
# http://timestamp.digicert.com
# https://tsa.safecreative.org/
TSAURL="https://timestamp.geotrust.com/tsa"

ZIPALIGN="`which zipalign`"
ALIGN="4"

showerror() {
	echo "$@" >&2
	exit 1
}

genkeypair() {
	local keystore="$1"
	[ -e "${keystore}" ] && return

	[ -d "`dirname ${keystore}`" ] || mkdir -p "`dirname ${keystore}`"
	keytool -genkeypair -alias "${KEYALIAS}" -keyalg RSA -keysize 2048 -dname "${CERTDNAME}" -validity 10000 -keypass "${STOREPASS}" -keystore "${keystore}" -storepass "${STOREPASS}"
}

setkeystore() {
	local name="$1"
	[ -n "${name}" ] || name="${DEFAULTKEYSTORE}"

	# CN=Common Name, OU=Organizational Unit, O=Organization, L=Locality, ST=State or Province, C=two-letter country code
	readonly CERTDNAME="CN=${name} key"
	readonly KEYSTORE="${KEYSTOREDIR}/${name}.keystore"
	readonly STOREPASS="android${name}"
	readonly KEYALIAS="${name}"

	[ -e "${KEYSTORE}" ] || genkeypair "${KEYSTORE}"
}

signapk() {
	local in="$1"
	[ -e "${in}" ] || showerror "${in}: file not exist"

	local bn="${in%\.*}"
	local unaligned="${bn}-unaligned.apk"
	local signed="${bn}-signed.apk"

	set -e
	cp -f "${in}" "${unaligned}"
	# remove signing info
	zip -q -d "${unaligned}" "META-INF/*"
	jarsigner -keystore "${KEYSTORE}" -storepass "${STOREPASS}" -digestalg SHA1 -sigalg SHA1withRSA ${TSAURL:+-tsa ${TSAURL}} "${unaligned}" "${KEYALIAS}"
	if [ -x "${ZIPALIGN}" ] ; then
		"${ZIPALIGN}" -f -z "${ALIGN}" "${unaligned}" "${signed}"
		rm -f "${unaligned}"
	else
		mv -f "${unaligned}" "${signed}"
	fi
	echo "signed apk: ${signed}"
	set +e
}

showcert() {
	local in="$1"
	[ -e "${in}" ] || return 1

	echo "${in}"
	keytool -printcert -jarfile "${in}"
}

showhelp() {
	cat <<EOF
`basename $0`: signing a apk
Usage: `basename $0` [options...] apk
	-h		show this help
	-v		show certificate details of a signed apk
	-k KEYNAME	use keystore KEYNAME to sign apk
			keystore files is stored in ${KEYSTOREDIR} directory
	-t TSAURL	location of the Timestamping Authority (for jarsigner)
	-n		DO NOT use zipalign
	-z ZIPALIGN	path to zipalign (auto detected in \$PATH)
	-a ALIGN	alignment in bytes (for zipalign, default 4)
EOF
	exit
}

main() {
	local opt
	local key
	local cert
	while getopts "a:hk:nt:vz:" opt ; do
		case "${opt}" in
		a)
			ALIGN="${OPTARG}"
			;;
		k)
			key="${OPTARG}"
			;;
		n)
			ZIPALIGN=
			;;
		t)
			TSAURL="${OPTARG}"
			;;
		v)
			cert=yes
			;;
		z)
			ZIPALIGN="${OPTARG}"
			;;
		?)
			showhelp
			;;
		esac
	done
	# remove options
	shift "$[$OPTIND - 1]"

	[ "$#" -eq 0 ] && showhelp

	if [ -n "${cert}" ] ; then
		for f in "$@" ; do
			showcert "${f}"
		done
		exit 0
	fi

	setkeystore "${key}"
	for f in "$@" ; do
		signapk "${f}"
	done
}

main "$@"
